역할
-  header 파일들을 모아서 compiled 된 형태로 바꿔주는 역할을 한다.
이를 통해 컴파일러가 header 파일들을 다 읽어들일 필요 없이
compiled 된 형태만 읽어들이면 된다.

즉, 여러 개의 header 파일을 include 하고 있는 header 파일이라고
생각하면 된다.

예를 들어 특정 .cpp 파일들에서 std::vector.h 를 inlcue 시키면
각 cpp 파일을 compile 할 때마다 해당 vector header file 을
모두 읽어들여야 한다. 중복해서 

뿐만 아니라 vector.h 자체가 내부적으로 또 다른 수많은 header file
들을 읽어들이기 때문에 이는 컴파일 속도를 매우 느리게 한다

- 뿐만 아니라 cpp 파일에 변경이 생기면 해당 cpp 파일 전체를
컴파일해야 하는데, 그 의미는 vector.h 에 있는 내용이 전부다
해당 .cpp 파일에 복사되는 과정도 진행되게 된다. 이는 큰 낭비다.

- (동작 원리)
전체 header 파일을 모아다가 컴파일하여 binary 파일 형태로 저장한다.
이는 결과적으로 컴파일러 입장에서 text 를 다루는 것보다
더 빨리 처리할 수 있게 해준다. 즉, .cpp 파일 입장에서 이전처럼
vector.h 전체를 다시 컴파일해서 붙여넣기 하는 작업이 아니라
Precompiled.h 에 binary 형태로 저장된 형태만 참고하면 되므로
컴파일 속도가 크게 증가하게 된다.

- (주의할 점)
자주 바뀌는 사항이 PreCompiled.h 에 들어가면
당연히 해당 .h 파일도 다시 컴파일해야 한다. 따라서
자주 변하지 않는 사항들만 include 시키자.

보통은 3rd libray 위주로 많이 포함시킨다.
즉, 내 코드가 아닌 것들
ex) STL

- (사용 방식)
속성 -> C/C++ -> Precompiled Header 속성
